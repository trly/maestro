name: CI

on:
  push:
    branches: ["**"]
    paths:
      - "src/**"
      - "src-tauri/**"
      - "amp-executor/**"
      - "package.json"
      - "bun.lock"
      - "Cargo.lock"
      - ".github/workflows/**.yml"
  pull_request:
    branches: ["**"]
    paths:
      - "src/**"
      - "src-tauri/**"
      - "amp-executor/**"
      - "package.json"
      - "bun.lock"
      - "Cargo.lock"
      - ".github/workflows/**.yml"

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: TypeScript check
        run: bun run check

  lint-rust:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install mise
        uses: jdx/mise-action@v2
        with:
          cache: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install Node dependencies
        run: bun install --frozen-lockfile

      - name: Build amp-executor sidecar
        run: make sidecar

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Cargo format check
        run: cargo fmt --check
        working-directory: src-tauri

      - name: Cargo clippy
        run: cargo clippy --all-targets -- -D warnings
        working-directory: src-tauri

  test:
    runs-on: ubuntu-latest
    needs: [lint-frontend, lint-rust]
    steps:
      - uses: actions/checkout@v4

      - name: Install mise
        uses: jdx/mise-action@v2
        with:
          cache: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install Node dependencies
        run: bun install --frozen-lockfile

      - name: Build amp-executor sidecar
        run: make sidecar

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Cargo test
        run: cargo test
        working-directory: src-tauri

  build:
    runs-on: ${{ matrix.os }}
    needs: [lint-frontend, lint-rust]
    if: always()
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            bundle: deb
            artifact-name: linux-build
            artifact-path: src-tauri/target/release/bundle/deb/*.deb
          - os: macos-latest
            bundle: dmg
            artifact-name: macos-build
            artifact-path: src-tauri/target/release/bundle/dmg/*.dmg
    steps:
      - uses: actions/checkout@v4

      - name: Install mise
        uses: jdx/mise-action@v2
        with:
          cache: true

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install Node dependencies
        run: bun install --frozen-lockfile

      - name: Build amp-executor sidecar
        run: make sidecar

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Build app
        run: cargo tauri build --bundles ${{ matrix.bundle }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-path }}

      - name: Fail if lint failed
        if: needs.lint-frontend.result != 'success' || needs.lint-rust.result != 'success'
        run: exit 1