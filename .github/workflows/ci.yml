name: CI

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install mise
        uses: jdx/mise-action@v2

      - name: Install Rust components
        run: rustup component add clippy

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install Node dependencies
        run: bun install

      - name: TypeScript check
        run: bun run check

      - name: Cargo check
        run: cargo check
        working-directory: src-tauri

      - name: Cargo clippy
        run: cargo clippy -- -D warnings
        working-directory: src-tauri

  build:
    runs-on: ${{ matrix.os }}
    needs: lint
    if: always()
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            bundle: deb
            artifact-name: linux-build
            artifact-path: src-tauri/target/release/bundle/deb/*.deb
          - os: macos-latest
            bundle: dmg
            artifact-name: macos-build
            artifact-path: src-tauri/target/release/bundle/dmg/*.dmg
    steps:
      - uses: actions/checkout@v4

      - name: Install mise
        uses: jdx/mise-action@v2

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install Node dependencies
        run: bun install

      - name: Install Tauri CLI
        run: cargo install tauri-cli --locked

      - name: Build app
        run: cargo tauri build --bundles ${{ matrix.bundle }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-path }}

      - name: Fail if lint failed
        if: needs.lint.result != 'success'
        run: exit 1

  test:
    runs-on: ubuntu-latest
    needs: lint
    if: always()
    steps:
      - uses: actions/checkout@v4

      - name: Install mise
        uses: jdx/mise-action@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install Node dependencies
        run: bun install

      - name: Cargo test
        run: cargo test
        working-directory: src-tauri

      - name: Fail if lint failed
        if: needs.lint.result != 'success'
        run: exit 1
