name: Release

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+*"]

concurrency:
  group: release-${{ github.sha }}
  cancel-in-progress: false

jobs:
  verify-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Wait for CI to complete
        id: ci-run
        run: |
          echo "Waiting for CI workflow to complete for commit ${{ github.sha }}..."
          TIMEOUT=3600
          ELAPSED=0
          INTERVAL=30

          while [ $ELAPSED -lt $TIMEOUT ]; do
            RUN_ID=$(gh run list --workflow=ci.yml --commit=${{ github.sha }} --json databaseId,status,conclusion --jq '.[] | select(.status=="completed" and .conclusion=="success") | .databaseId' | head -n1)
            
            if [ -n "$RUN_ID" ]; then
              echo "Found successful CI run: $RUN_ID"
              echo "run-id=$RUN_ID" >> $GITHUB_OUTPUT
              exit 0
            fi
            
            FAILED_RUN=$(gh run list --workflow=ci.yml --commit=${{ github.sha }} --json conclusion --jq '.[] | select(.conclusion=="failure" or .conclusion=="cancelled") | .conclusion' | head -n1)
            if [ -n "$FAILED_RUN" ]; then
              echo "::error::CI workflow failed or was cancelled for commit ${{ github.sha }}"
              exit 1
            fi
            
            echo "CI still running, waiting ${INTERVAL}s... (${ELAPSED}s elapsed)"
            sleep $INTERVAL
            ELAPSED=$((ELAPSED + INTERVAL))
          done

          echo "::error::Timeout waiting for CI to complete after ${TIMEOUT}s"
          exit 1
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Linux build artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: ./builds/linux
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ steps.ci-run.outputs.run-id }}

      - name: Download macOS build artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-build
          path: ./builds/macos
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ steps.ci-run.outputs.run-id }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          files: |
            builds/linux/**/*.deb
            builds/macos/**/*.dmg
          generate_release_notes: true
          fail_on_unmatched_files: true
